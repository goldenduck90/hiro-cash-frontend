datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  notes    Note[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model OauthCredential {
  id String @id @default(cuid())

  provider String
  userId   String
  profile  Json?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Account   Account? @relation(fields: [accountId], references: [id])
  accountId String?

  @@unique([provider, userId])
}

model Account {
  id       String @id @default(cuid())
  username String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  wallets          Wallet[]
  oauthCredentials OauthCredential[]
}

model Wallet {
  id String @id @default(cuid())

  accountId String
  account   Account @relation(fields: [accountId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  address String
}
